<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/data/mongo
	http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->

    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <!--只为后缀是"Impl"的bean生成代理-->
        <property name="beanNames" value="*Impl"/>

        <!--增强-->
        <property name="interceptorNames" value="greetingAroundAdvice"/>

        <!--是否对代理生成策略进行优化-->
        <!--默认为false;如果该类有接口，就代理接口（使用jdk的动态代理）-->
        <!--如果没有接口，就代理类（使用cglib动态代理）-->

       <!-- cglib创建代理速度较慢，但是创建后运行的速度非常快；
        而jdk动态代理正好相反；如果在运行的时候不断用cglib去创建代理，系统的性能会大打折扣；
        所以加你在系统初始化的时候用cglib去创建代理，并放入spring的applicationContext中已备后用。-->
        <property name="optimize" value="true"/>

    </bean>

</beans>